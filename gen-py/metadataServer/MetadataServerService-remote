#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from metadataServer import MetadataServerService
from metadataServer.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  file getFile(string filename)'
  print '  file downloadResponse(file hashedFile)'
  print '  file download(string filename, string metaName)'
  print '  uploadResponse upload(string filename,  hashList, i32 clientVersion, i32 numberOfM, string metaName)'
  print '  uploadResponse storeFile(string filename,  hashList, i32 version)'
  print '  response checkFileVersion(string filename, i32 clientVersion)'
  print '  version getVersion(string filename)'
  print '  listHash getHashList(string filename)'
  print '  response triggerDelete(string filename, i32 numberOfM, string metaName)'
  print '  response deleteFile(string filename)'
  print '  uploadResponse storeFileResponse( missingList, file f)'
  print '  response triggerGossip(string metaName)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = MetadataServerService.Client(protocol)
transport.open()

if cmd == 'getFile':
  if len(args) != 1:
    print 'getFile requires 1 args'
    sys.exit(1)
  pp.pprint(client.getFile(args[0],))

elif cmd == 'downloadResponse':
  if len(args) != 1:
    print 'downloadResponse requires 1 args'
    sys.exit(1)
  pp.pprint(client.downloadResponse(eval(args[0]),))

elif cmd == 'download':
  if len(args) != 2:
    print 'download requires 2 args'
    sys.exit(1)
  pp.pprint(client.download(args[0],args[1],))

elif cmd == 'upload':
  if len(args) != 5:
    print 'upload requires 5 args'
    sys.exit(1)
  pp.pprint(client.upload(args[0],eval(args[1]),eval(args[2]),eval(args[3]),args[4],))

elif cmd == 'storeFile':
  if len(args) != 3:
    print 'storeFile requires 3 args'
    sys.exit(1)
  pp.pprint(client.storeFile(args[0],eval(args[1]),eval(args[2]),))

elif cmd == 'checkFileVersion':
  if len(args) != 2:
    print 'checkFileVersion requires 2 args'
    sys.exit(1)
  pp.pprint(client.checkFileVersion(args[0],eval(args[1]),))

elif cmd == 'getVersion':
  if len(args) != 1:
    print 'getVersion requires 1 args'
    sys.exit(1)
  pp.pprint(client.getVersion(args[0],))

elif cmd == 'getHashList':
  if len(args) != 1:
    print 'getHashList requires 1 args'
    sys.exit(1)
  pp.pprint(client.getHashList(args[0],))

elif cmd == 'triggerDelete':
  if len(args) != 3:
    print 'triggerDelete requires 3 args'
    sys.exit(1)
  pp.pprint(client.triggerDelete(args[0],eval(args[1]),args[2],))

elif cmd == 'deleteFile':
  if len(args) != 1:
    print 'deleteFile requires 1 args'
    sys.exit(1)
  pp.pprint(client.deleteFile(args[0],))

elif cmd == 'storeFileResponse':
  if len(args) != 2:
    print 'storeFileResponse requires 2 args'
    sys.exit(1)
  pp.pprint(client.storeFileResponse(eval(args[0]),eval(args[1]),))

elif cmd == 'triggerGossip':
  if len(args) != 1:
    print 'triggerGossip requires 1 args'
    sys.exit(1)
  pp.pprint(client.triggerGossip(args[0],))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
